// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/vtrod/veecomm-api/ent/address"
	"github.com/vtrod/veecomm-api/ent/avaliation"
	"github.com/vtrod/veecomm-api/ent/cart"
	"github.com/vtrod/veecomm-api/ent/cartitem"
	"github.com/vtrod/veecomm-api/ent/category"
	"github.com/vtrod/veecomm-api/ent/coupon"
	"github.com/vtrod/veecomm-api/ent/order"
	"github.com/vtrod/veecomm-api/ent/orderitem"
	"github.com/vtrod/veecomm-api/ent/product"
	"github.com/vtrod/veecomm-api/ent/schema"
	"github.com/vtrod/veecomm-api/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	addressFields := schema.Address{}.Fields()
	_ = addressFields
	// addressDescCep is the schema descriptor for cep field.
	addressDescCep := addressFields[2].Descriptor()
	// address.CepValidator is a validator for the "cep" field. It is called by the builders before save.
	address.CepValidator = addressDescCep.Validators[0].(func(string) error)
	// addressDescLogradouro is the schema descriptor for logradouro field.
	addressDescLogradouro := addressFields[3].Descriptor()
	// address.LogradouroValidator is a validator for the "logradouro" field. It is called by the builders before save.
	address.LogradouroValidator = addressDescLogradouro.Validators[0].(func(string) error)
	// addressDescNumero is the schema descriptor for numero field.
	addressDescNumero := addressFields[4].Descriptor()
	// address.NumeroValidator is a validator for the "numero" field. It is called by the builders before save.
	address.NumeroValidator = addressDescNumero.Validators[0].(func(string) error)
	// addressDescBairro is the schema descriptor for bairro field.
	addressDescBairro := addressFields[6].Descriptor()
	// address.BairroValidator is a validator for the "bairro" field. It is called by the builders before save.
	address.BairroValidator = addressDescBairro.Validators[0].(func(string) error)
	// addressDescCidade is the schema descriptor for cidade field.
	addressDescCidade := addressFields[7].Descriptor()
	// address.CidadeValidator is a validator for the "cidade" field. It is called by the builders before save.
	address.CidadeValidator = addressDescCidade.Validators[0].(func(string) error)
	// addressDescEstado is the schema descriptor for estado field.
	addressDescEstado := addressFields[8].Descriptor()
	// address.EstadoValidator is a validator for the "estado" field. It is called by the builders before save.
	address.EstadoValidator = addressDescEstado.Validators[0].(func(string) error)
	// addressDescIsDefault is the schema descriptor for is_default field.
	addressDescIsDefault := addressFields[9].Descriptor()
	// address.DefaultIsDefault holds the default value on creation for the is_default field.
	address.DefaultIsDefault = addressDescIsDefault.Default.(bool)
	// addressDescCreatedAt is the schema descriptor for created_at field.
	addressDescCreatedAt := addressFields[10].Descriptor()
	// address.DefaultCreatedAt holds the default value on creation for the created_at field.
	address.DefaultCreatedAt = addressDescCreatedAt.Default.(func() time.Time)
	// addressDescUpdatedAt is the schema descriptor for updated_at field.
	addressDescUpdatedAt := addressFields[11].Descriptor()
	// address.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	address.DefaultUpdatedAt = addressDescUpdatedAt.Default.(func() time.Time)
	// address.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	address.UpdateDefaultUpdatedAt = addressDescUpdatedAt.UpdateDefault.(func() time.Time)
	avaliationFields := schema.Avaliation{}.Fields()
	_ = avaliationFields
	// avaliationDescUserName is the schema descriptor for user_name field.
	avaliationDescUserName := avaliationFields[3].Descriptor()
	// avaliation.UserNameValidator is a validator for the "user_name" field. It is called by the builders before save.
	avaliation.UserNameValidator = avaliationDescUserName.Validators[0].(func(string) error)
	// avaliationDescRating is the schema descriptor for rating field.
	avaliationDescRating := avaliationFields[4].Descriptor()
	// avaliation.RatingValidator is a validator for the "rating" field. It is called by the builders before save.
	avaliation.RatingValidator = avaliationDescRating.Validators[0].(func(int) error)
	// avaliationDescComment is the schema descriptor for comment field.
	avaliationDescComment := avaliationFields[5].Descriptor()
	// avaliation.CommentValidator is a validator for the "comment" field. It is called by the builders before save.
	avaliation.CommentValidator = avaliationDescComment.Validators[0].(func(string) error)
	// avaliationDescDate is the schema descriptor for date field.
	avaliationDescDate := avaliationFields[6].Descriptor()
	// avaliation.DefaultDate holds the default value on creation for the date field.
	avaliation.DefaultDate = avaliationDescDate.Default.(func() time.Time)
	// avaliationDescCreatedAt is the schema descriptor for created_at field.
	avaliationDescCreatedAt := avaliationFields[8].Descriptor()
	// avaliation.DefaultCreatedAt holds the default value on creation for the created_at field.
	avaliation.DefaultCreatedAt = avaliationDescCreatedAt.Default.(func() time.Time)
	// avaliationDescUpdatedAt is the schema descriptor for updated_at field.
	avaliationDescUpdatedAt := avaliationFields[9].Descriptor()
	// avaliation.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	avaliation.DefaultUpdatedAt = avaliationDescUpdatedAt.Default.(func() time.Time)
	// avaliation.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	avaliation.UpdateDefaultUpdatedAt = avaliationDescUpdatedAt.UpdateDefault.(func() time.Time)
	cartFields := schema.Cart{}.Fields()
	_ = cartFields
	// cartDescSubtotal is the schema descriptor for subtotal field.
	cartDescSubtotal := cartFields[2].Descriptor()
	// cart.DefaultSubtotal holds the default value on creation for the subtotal field.
	cart.DefaultSubtotal = cartDescSubtotal.Default.(float64)
	// cartDescDiscount is the schema descriptor for discount field.
	cartDescDiscount := cartFields[4].Descriptor()
	// cart.DefaultDiscount holds the default value on creation for the discount field.
	cart.DefaultDiscount = cartDescDiscount.Default.(float64)
	// cartDescTotal is the schema descriptor for total field.
	cartDescTotal := cartFields[5].Descriptor()
	// cart.DefaultTotal holds the default value on creation for the total field.
	cart.DefaultTotal = cartDescTotal.Default.(float64)
	// cartDescAppliedCoupon is the schema descriptor for applied_coupon field.
	cartDescAppliedCoupon := cartFields[6].Descriptor()
	// cart.DefaultAppliedCoupon holds the default value on creation for the applied_coupon field.
	cart.DefaultAppliedCoupon = cartDescAppliedCoupon.Default.(bool)
	// cartDescCreatedAt is the schema descriptor for created_at field.
	cartDescCreatedAt := cartFields[8].Descriptor()
	// cart.DefaultCreatedAt holds the default value on creation for the created_at field.
	cart.DefaultCreatedAt = cartDescCreatedAt.Default.(func() time.Time)
	// cartDescUpdatedAt is the schema descriptor for updated_at field.
	cartDescUpdatedAt := cartFields[9].Descriptor()
	// cart.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	cart.DefaultUpdatedAt = cartDescUpdatedAt.Default.(func() time.Time)
	// cart.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	cart.UpdateDefaultUpdatedAt = cartDescUpdatedAt.UpdateDefault.(func() time.Time)
	cartitemFields := schema.CartItem{}.Fields()
	_ = cartitemFields
	// cartitemDescName is the schema descriptor for name field.
	cartitemDescName := cartitemFields[3].Descriptor()
	// cartitem.NameValidator is a validator for the "name" field. It is called by the builders before save.
	cartitem.NameValidator = cartitemDescName.Validators[0].(func(string) error)
	// cartitemDescPrice is the schema descriptor for price field.
	cartitemDescPrice := cartitemFields[4].Descriptor()
	// cartitem.PriceValidator is a validator for the "price" field. It is called by the builders before save.
	cartitem.PriceValidator = cartitemDescPrice.Validators[0].(func(float64) error)
	// cartitemDescImage is the schema descriptor for image field.
	cartitemDescImage := cartitemFields[5].Descriptor()
	// cartitem.ImageValidator is a validator for the "image" field. It is called by the builders before save.
	cartitem.ImageValidator = cartitemDescImage.Validators[0].(func(string) error)
	// cartitemDescQuantity is the schema descriptor for quantity field.
	cartitemDescQuantity := cartitemFields[6].Descriptor()
	// cartitem.QuantityValidator is a validator for the "quantity" field. It is called by the builders before save.
	cartitem.QuantityValidator = cartitemDescQuantity.Validators[0].(func(int) error)
	// cartitemDescCreatedAt is the schema descriptor for created_at field.
	cartitemDescCreatedAt := cartitemFields[7].Descriptor()
	// cartitem.DefaultCreatedAt holds the default value on creation for the created_at field.
	cartitem.DefaultCreatedAt = cartitemDescCreatedAt.Default.(func() time.Time)
	// cartitemDescUpdatedAt is the schema descriptor for updated_at field.
	cartitemDescUpdatedAt := cartitemFields[8].Descriptor()
	// cartitem.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	cartitem.DefaultUpdatedAt = cartitemDescUpdatedAt.Default.(func() time.Time)
	// cartitem.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	cartitem.UpdateDefaultUpdatedAt = cartitemDescUpdatedAt.UpdateDefault.(func() time.Time)
	categoryFields := schema.Category{}.Fields()
	_ = categoryFields
	// categoryDescName is the schema descriptor for name field.
	categoryDescName := categoryFields[1].Descriptor()
	// category.NameValidator is a validator for the "name" field. It is called by the builders before save.
	category.NameValidator = categoryDescName.Validators[0].(func(string) error)
	// categoryDescSlug is the schema descriptor for slug field.
	categoryDescSlug := categoryFields[2].Descriptor()
	// category.SlugValidator is a validator for the "slug" field. It is called by the builders before save.
	category.SlugValidator = categoryDescSlug.Validators[0].(func(string) error)
	// categoryDescCreatedAt is the schema descriptor for created_at field.
	categoryDescCreatedAt := categoryFields[4].Descriptor()
	// category.DefaultCreatedAt holds the default value on creation for the created_at field.
	category.DefaultCreatedAt = categoryDescCreatedAt.Default.(func() time.Time)
	// categoryDescUpdatedAt is the schema descriptor for updated_at field.
	categoryDescUpdatedAt := categoryFields[5].Descriptor()
	// category.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	category.DefaultUpdatedAt = categoryDescUpdatedAt.Default.(func() time.Time)
	// category.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	category.UpdateDefaultUpdatedAt = categoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	couponFields := schema.Coupon{}.Fields()
	_ = couponFields
	// couponDescCode is the schema descriptor for code field.
	couponDescCode := couponFields[1].Descriptor()
	// coupon.CodeValidator is a validator for the "code" field. It is called by the builders before save.
	coupon.CodeValidator = couponDescCode.Validators[0].(func(string) error)
	// couponDescValue is the schema descriptor for value field.
	couponDescValue := couponFields[3].Descriptor()
	// coupon.ValueValidator is a validator for the "value" field. It is called by the builders before save.
	coupon.ValueValidator = couponDescValue.Validators[0].(func(float64) error)
	// couponDescUsedCount is the schema descriptor for used_count field.
	couponDescUsedCount := couponFields[6].Descriptor()
	// coupon.DefaultUsedCount holds the default value on creation for the used_count field.
	coupon.DefaultUsedCount = couponDescUsedCount.Default.(int)
	// couponDescActive is the schema descriptor for active field.
	couponDescActive := couponFields[8].Descriptor()
	// coupon.DefaultActive holds the default value on creation for the active field.
	coupon.DefaultActive = couponDescActive.Default.(bool)
	// couponDescCreatedAt is the schema descriptor for created_at field.
	couponDescCreatedAt := couponFields[9].Descriptor()
	// coupon.DefaultCreatedAt holds the default value on creation for the created_at field.
	coupon.DefaultCreatedAt = couponDescCreatedAt.Default.(func() time.Time)
	// couponDescUpdatedAt is the schema descriptor for updated_at field.
	couponDescUpdatedAt := couponFields[10].Descriptor()
	// coupon.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	coupon.DefaultUpdatedAt = couponDescUpdatedAt.Default.(func() time.Time)
	// coupon.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	coupon.UpdateDefaultUpdatedAt = couponDescUpdatedAt.UpdateDefault.(func() time.Time)
	orderFields := schema.Order{}.Fields()
	_ = orderFields
	// orderDescDate is the schema descriptor for date field.
	orderDescDate := orderFields[2].Descriptor()
	// order.DefaultDate holds the default value on creation for the date field.
	order.DefaultDate = orderDescDate.Default.(func() time.Time)
	// orderDescTotal is the schema descriptor for total field.
	orderDescTotal := orderFields[3].Descriptor()
	// order.TotalValidator is a validator for the "total" field. It is called by the builders before save.
	order.TotalValidator = orderDescTotal.Validators[0].(func(float64) error)
	// orderDescShipping is the schema descriptor for shipping field.
	orderDescShipping := orderFields[4].Descriptor()
	// order.DefaultShipping holds the default value on creation for the shipping field.
	order.DefaultShipping = orderDescShipping.Default.(float64)
	// orderDescDiscount is the schema descriptor for discount field.
	orderDescDiscount := orderFields[5].Descriptor()
	// order.DefaultDiscount holds the default value on creation for the discount field.
	order.DefaultDiscount = orderDescDiscount.Default.(float64)
	// orderDescPaymentMethod is the schema descriptor for payment_method field.
	orderDescPaymentMethod := orderFields[9].Descriptor()
	// order.PaymentMethodValidator is a validator for the "payment_method" field. It is called by the builders before save.
	order.PaymentMethodValidator = orderDescPaymentMethod.Validators[0].(func(string) error)
	// orderDescPaymentStatus is the schema descriptor for payment_status field.
	orderDescPaymentStatus := orderFields[10].Descriptor()
	// order.PaymentStatusValidator is a validator for the "payment_status" field. It is called by the builders before save.
	order.PaymentStatusValidator = orderDescPaymentStatus.Validators[0].(func(string) error)
	// orderDescCreatedAt is the schema descriptor for created_at field.
	orderDescCreatedAt := orderFields[12].Descriptor()
	// order.DefaultCreatedAt holds the default value on creation for the created_at field.
	order.DefaultCreatedAt = orderDescCreatedAt.Default.(func() time.Time)
	// orderDescUpdatedAt is the schema descriptor for updated_at field.
	orderDescUpdatedAt := orderFields[13].Descriptor()
	// order.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	order.DefaultUpdatedAt = orderDescUpdatedAt.Default.(func() time.Time)
	// order.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	order.UpdateDefaultUpdatedAt = orderDescUpdatedAt.UpdateDefault.(func() time.Time)
	orderitemFields := schema.OrderItem{}.Fields()
	_ = orderitemFields
	// orderitemDescName is the schema descriptor for name field.
	orderitemDescName := orderitemFields[3].Descriptor()
	// orderitem.NameValidator is a validator for the "name" field. It is called by the builders before save.
	orderitem.NameValidator = orderitemDescName.Validators[0].(func(string) error)
	// orderitemDescPrice is the schema descriptor for price field.
	orderitemDescPrice := orderitemFields[4].Descriptor()
	// orderitem.PriceValidator is a validator for the "price" field. It is called by the builders before save.
	orderitem.PriceValidator = orderitemDescPrice.Validators[0].(func(float64) error)
	// orderitemDescImage is the schema descriptor for image field.
	orderitemDescImage := orderitemFields[5].Descriptor()
	// orderitem.ImageValidator is a validator for the "image" field. It is called by the builders before save.
	orderitem.ImageValidator = orderitemDescImage.Validators[0].(func(string) error)
	// orderitemDescQuantity is the schema descriptor for quantity field.
	orderitemDescQuantity := orderitemFields[6].Descriptor()
	// orderitem.QuantityValidator is a validator for the "quantity" field. It is called by the builders before save.
	orderitem.QuantityValidator = orderitemDescQuantity.Validators[0].(func(int) error)
	// orderitemDescCreatedAt is the schema descriptor for created_at field.
	orderitemDescCreatedAt := orderitemFields[7].Descriptor()
	// orderitem.DefaultCreatedAt holds the default value on creation for the created_at field.
	orderitem.DefaultCreatedAt = orderitemDescCreatedAt.Default.(func() time.Time)
	// orderitemDescUpdatedAt is the schema descriptor for updated_at field.
	orderitemDescUpdatedAt := orderitemFields[8].Descriptor()
	// orderitem.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	orderitem.DefaultUpdatedAt = orderitemDescUpdatedAt.Default.(func() time.Time)
	// orderitem.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	orderitem.UpdateDefaultUpdatedAt = orderitemDescUpdatedAt.UpdateDefault.(func() time.Time)
	productFields := schema.Product{}.Fields()
	_ = productFields
	// productDescName is the schema descriptor for name field.
	productDescName := productFields[1].Descriptor()
	// product.NameValidator is a validator for the "name" field. It is called by the builders before save.
	product.NameValidator = productDescName.Validators[0].(func(string) error)
	// productDescSlug is the schema descriptor for slug field.
	productDescSlug := productFields[2].Descriptor()
	// product.SlugValidator is a validator for the "slug" field. It is called by the builders before save.
	product.SlugValidator = productDescSlug.Validators[0].(func(string) error)
	// productDescDescription is the schema descriptor for description field.
	productDescDescription := productFields[3].Descriptor()
	// product.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	product.DescriptionValidator = productDescDescription.Validators[0].(func(string) error)
	// productDescPrice is the schema descriptor for price field.
	productDescPrice := productFields[4].Descriptor()
	// product.PriceValidator is a validator for the "price" field. It is called by the builders before save.
	product.PriceValidator = productDescPrice.Validators[0].(func(float64) error)
	// productDescOnSale is the schema descriptor for on_sale field.
	productDescOnSale := productFields[6].Descriptor()
	// product.DefaultOnSale holds the default value on creation for the on_sale field.
	product.DefaultOnSale = productDescOnSale.Default.(bool)
	// productDescStock is the schema descriptor for stock field.
	productDescStock := productFields[7].Descriptor()
	// product.DefaultStock holds the default value on creation for the stock field.
	product.DefaultStock = productDescStock.Default.(int)
	// productDescSku is the schema descriptor for sku field.
	productDescSku := productFields[8].Descriptor()
	// product.SkuValidator is a validator for the "sku" field. It is called by the builders before save.
	product.SkuValidator = productDescSku.Validators[0].(func(string) error)
	// productDescImages is the schema descriptor for images field.
	productDescImages := productFields[10].Descriptor()
	// product.DefaultImages holds the default value on creation for the images field.
	product.DefaultImages = productDescImages.Default.([]string)
	// productDescRating is the schema descriptor for rating field.
	productDescRating := productFields[11].Descriptor()
	// product.DefaultRating holds the default value on creation for the rating field.
	product.DefaultRating = productDescRating.Default.(float64)
	// productDescReviewCount is the schema descriptor for review_count field.
	productDescReviewCount := productFields[12].Descriptor()
	// product.DefaultReviewCount holds the default value on creation for the review_count field.
	product.DefaultReviewCount = productDescReviewCount.Default.(int)
	// productDescCreatedAt is the schema descriptor for created_at field.
	productDescCreatedAt := productFields[13].Descriptor()
	// product.DefaultCreatedAt holds the default value on creation for the created_at field.
	product.DefaultCreatedAt = productDescCreatedAt.Default.(func() time.Time)
	// productDescUpdatedAt is the schema descriptor for updated_at field.
	productDescUpdatedAt := productFields[14].Descriptor()
	// product.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	product.DefaultUpdatedAt = productDescUpdatedAt.Default.(func() time.Time)
	// product.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	product.UpdateDefaultUpdatedAt = productDescUpdatedAt.UpdateDefault.(func() time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescName is the schema descriptor for name field.
	userDescName := userFields[1].Descriptor()
	// user.NameValidator is a validator for the "name" field. It is called by the builders before save.
	user.NameValidator = userDescName.Validators[0].(func(string) error)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[2].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[3].Descriptor()
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[6].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[7].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
}

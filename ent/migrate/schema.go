// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AddressesColumns holds the columns for the "addresses" table.
	AddressesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "cep", Type: field.TypeString},
		{Name: "logradouro", Type: field.TypeString},
		{Name: "numero", Type: field.TypeString},
		{Name: "complemento", Type: field.TypeString, Nullable: true},
		{Name: "bairro", Type: field.TypeString},
		{Name: "cidade", Type: field.TypeString},
		{Name: "estado", Type: field.TypeString},
		{Name: "is_default", Type: field.TypeBool, Default: false},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeString, Nullable: true},
	}
	// AddressesTable holds the schema information for the "addresses" table.
	AddressesTable = &schema.Table{
		Name:       "addresses",
		Columns:    AddressesColumns,
		PrimaryKey: []*schema.Column{AddressesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "addresses_users_addresses",
				Columns:    []*schema.Column{AddressesColumns[11]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AvaliationsColumns holds the columns for the "avaliations" table.
	AvaliationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "user_name", Type: field.TypeString},
		{Name: "rating", Type: field.TypeInt},
		{Name: "comment", Type: field.TypeString, Size: 2147483647},
		{Name: "date", Type: field.TypeTime},
		{Name: "images", Type: field.TypeJSON, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "product_id", Type: field.TypeString, Nullable: true},
		{Name: "user_id", Type: field.TypeString, Nullable: true},
	}
	// AvaliationsTable holds the schema information for the "avaliations" table.
	AvaliationsTable = &schema.Table{
		Name:       "avaliations",
		Columns:    AvaliationsColumns,
		PrimaryKey: []*schema.Column{AvaliationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "avaliations_products_avaliations",
				Columns:    []*schema.Column{AvaliationsColumns[8]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "avaliations_users_avaliations",
				Columns:    []*schema.Column{AvaliationsColumns[9]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CartsColumns holds the columns for the "carts" table.
	CartsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "subtotal", Type: field.TypeFloat64, Default: 0},
		{Name: "shipping", Type: field.TypeFloat64, Nullable: true},
		{Name: "discount", Type: field.TypeFloat64, Default: 0},
		{Name: "total", Type: field.TypeFloat64, Default: 0},
		{Name: "applied_coupon", Type: field.TypeBool, Default: false},
		{Name: "coupon_code", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeString, Unique: true, Nullable: true},
	}
	// CartsTable holds the schema information for the "carts" table.
	CartsTable = &schema.Table{
		Name:       "carts",
		Columns:    CartsColumns,
		PrimaryKey: []*schema.Column{CartsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "carts_users_cart",
				Columns:    []*schema.Column{CartsColumns[9]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CartItemsColumns holds the columns for the "cart_items" table.
	CartItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "price", Type: field.TypeFloat64},
		{Name: "image", Type: field.TypeString},
		{Name: "quantity", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "cart_id", Type: field.TypeString, Nullable: true},
		{Name: "product_id", Type: field.TypeString, Nullable: true},
	}
	// CartItemsTable holds the schema information for the "cart_items" table.
	CartItemsTable = &schema.Table{
		Name:       "cart_items",
		Columns:    CartItemsColumns,
		PrimaryKey: []*schema.Column{CartItemsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "cart_items_carts_cart_items",
				Columns:    []*schema.Column{CartItemsColumns[7]},
				RefColumns: []*schema.Column{CartsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "cart_items_products_cart_items",
				Columns:    []*schema.Column{CartItemsColumns[8]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CategoriesColumns holds the columns for the "categories" table.
	CategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "slug", Type: field.TypeString, Unique: true},
		{Name: "image", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// CategoriesTable holds the schema information for the "categories" table.
	CategoriesTable = &schema.Table{
		Name:       "categories",
		Columns:    CategoriesColumns,
		PrimaryKey: []*schema.Column{CategoriesColumns[0]},
	}
	// CouponsColumns holds the columns for the "coupons" table.
	CouponsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "code", Type: field.TypeString, Unique: true},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"percentage", "fixed"}},
		{Name: "value", Type: field.TypeFloat64},
		{Name: "min_purchase", Type: field.TypeFloat64, Nullable: true},
		{Name: "usage_limit", Type: field.TypeInt, Nullable: true},
		{Name: "used_count", Type: field.TypeInt, Default: 0},
		{Name: "expires_at", Type: field.TypeTime, Nullable: true},
		{Name: "active", Type: field.TypeBool, Default: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// CouponsTable holds the schema information for the "coupons" table.
	CouponsTable = &schema.Table{
		Name:       "coupons",
		Columns:    CouponsColumns,
		PrimaryKey: []*schema.Column{CouponsColumns[0]},
	}
	// OrdersColumns holds the columns for the "orders" table.
	OrdersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "date", Type: field.TypeTime},
		{Name: "total", Type: field.TypeFloat64},
		{Name: "shipping", Type: field.TypeFloat64, Default: 0},
		{Name: "discount", Type: field.TypeFloat64, Default: 0},
		{Name: "delivery_type", Type: field.TypeEnum, Enums: []string{"pickup", "delivery"}},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"pending", "processing", "shipped", "delivered", "cancelled"}},
		{Name: "payment_method", Type: field.TypeString},
		{Name: "payment_status", Type: field.TypeString},
		{Name: "coupon_code", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "address_id", Type: field.TypeString, Nullable: true},
		{Name: "user_id", Type: field.TypeString, Nullable: true},
	}
	// OrdersTable holds the schema information for the "orders" table.
	OrdersTable = &schema.Table{
		Name:       "orders",
		Columns:    OrdersColumns,
		PrimaryKey: []*schema.Column{OrdersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "orders_addresses_orders",
				Columns:    []*schema.Column{OrdersColumns[12]},
				RefColumns: []*schema.Column{AddressesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "orders_users_orders",
				Columns:    []*schema.Column{OrdersColumns[13]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrderItemsColumns holds the columns for the "order_items" table.
	OrderItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "price", Type: field.TypeFloat64},
		{Name: "image", Type: field.TypeString},
		{Name: "quantity", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "order_id", Type: field.TypeString, Nullable: true},
		{Name: "product_id", Type: field.TypeString, Nullable: true},
	}
	// OrderItemsTable holds the schema information for the "order_items" table.
	OrderItemsTable = &schema.Table{
		Name:       "order_items",
		Columns:    OrderItemsColumns,
		PrimaryKey: []*schema.Column{OrderItemsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_items_orders_order_items",
				Columns:    []*schema.Column{OrderItemsColumns[7]},
				RefColumns: []*schema.Column{OrdersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_items_products_order_items",
				Columns:    []*schema.Column{OrderItemsColumns[8]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProductsColumns holds the columns for the "products" table.
	ProductsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "slug", Type: field.TypeString, Unique: true},
		{Name: "description", Type: field.TypeString, Size: 2147483647},
		{Name: "price", Type: field.TypeFloat64},
		{Name: "sale_price", Type: field.TypeFloat64, Nullable: true},
		{Name: "on_sale", Type: field.TypeBool, Default: false},
		{Name: "stock", Type: field.TypeInt, Default: 0},
		{Name: "sku", Type: field.TypeString},
		{Name: "images", Type: field.TypeJSON},
		{Name: "rating", Type: field.TypeFloat64, Default: 0},
		{Name: "review_count", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "category_id", Type: field.TypeString, Nullable: true},
	}
	// ProductsTable holds the schema information for the "products" table.
	ProductsTable = &schema.Table{
		Name:       "products",
		Columns:    ProductsColumns,
		PrimaryKey: []*schema.Column{ProductsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "products_categories_products",
				Columns:    []*schema.Column{ProductsColumns[14]},
				RefColumns: []*schema.Column{CategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "phone", Type: field.TypeString, Nullable: true},
		{Name: "profile_image", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AddressesTable,
		AvaliationsTable,
		CartsTable,
		CartItemsTable,
		CategoriesTable,
		CouponsTable,
		OrdersTable,
		OrderItemsTable,
		ProductsTable,
		UsersTable,
	}
)

func init() {
	AddressesTable.ForeignKeys[0].RefTable = UsersTable
	AvaliationsTable.ForeignKeys[0].RefTable = ProductsTable
	AvaliationsTable.ForeignKeys[1].RefTable = UsersTable
	CartsTable.ForeignKeys[0].RefTable = UsersTable
	CartItemsTable.ForeignKeys[0].RefTable = CartsTable
	CartItemsTable.ForeignKeys[1].RefTable = ProductsTable
	OrdersTable.ForeignKeys[0].RefTable = AddressesTable
	OrdersTable.ForeignKeys[1].RefTable = UsersTable
	OrderItemsTable.ForeignKeys[0].RefTable = OrdersTable
	OrderItemsTable.ForeignKeys[1].RefTable = ProductsTable
	ProductsTable.ForeignKeys[0].RefTable = CategoriesTable
}
